{"version":3,"file":"static/js/623.7897c16f.chunk.js","mappings":"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","sources":["../node_modules/react-circular-progressbar/src/Path.tsx","../node_modules/react-circular-progressbar/src/CircularProgressbar.tsx","../node_modules/react-circular-progressbar/src/constants.ts","components/AnimatedProgressBar.js","data/skills.js","pages/Skills/Skills.js"],"sourcesContent":["import * as React from 'react';\nimport { VIEWBOX_CENTER_X, VIEWBOX_CENTER_Y } from './constants';\n\nfunction Path({\n  className,\n  counterClockwise,\n  dashRatio,\n  pathRadius,\n  strokeWidth,\n  style,\n}: {\n  className?: string;\n  counterClockwise: boolean;\n  dashRatio: number;\n  pathRadius: number;\n  strokeWidth: number;\n  style?: object;\n}) {\n  return (\n    <path\n      className={className}\n      style={Object.assign({}, style, getDashStyle({ pathRadius, dashRatio, counterClockwise }))}\n      d={getPathDescription({\n        pathRadius,\n        counterClockwise,\n      })}\n      strokeWidth={strokeWidth}\n      fillOpacity={0}\n    />\n  );\n}\n\n// SVG path description specifies how the path should be drawn\nfunction getPathDescription({\n  pathRadius,\n  counterClockwise,\n}: {\n  pathRadius: number;\n  counterClockwise: boolean;\n}) {\n  const radius = pathRadius;\n  const rotation = counterClockwise ? 1 : 0;\n\n  // Move to center of canvas\n  // Relative move to top canvas\n  // Relative arc to bottom of canvas\n  // Relative arc to top of canvas\n  return `\n      M ${VIEWBOX_CENTER_X},${VIEWBOX_CENTER_Y}\n      m 0,-${radius}\n      a ${radius},${radius} ${rotation} 1 1 0,${2 * radius}\n      a ${radius},${radius} ${rotation} 1 1 0,-${2 * radius}\n    `;\n}\n\nfunction getDashStyle({\n  counterClockwise,\n  dashRatio,\n  pathRadius,\n}: {\n  counterClockwise: boolean;\n  dashRatio: number;\n  pathRadius: number;\n}) {\n  const diameter = Math.PI * 2 * pathRadius;\n  const gapLength = (1 - dashRatio) * diameter;\n\n  return {\n    // Have dash be full diameter, and gap be full diameter\n    strokeDasharray: `${diameter}px ${diameter}px`,\n    // Shift dash backward by gapLength, so gap starts appearing at correct distance\n    strokeDashoffset: `${counterClockwise ? -gapLength : gapLength}px`,\n  };\n}\n\nexport default Path;\n","import * as React from 'react';\n\nimport {\n  VIEWBOX_WIDTH,\n  VIEWBOX_HEIGHT,\n  VIEWBOX_HEIGHT_HALF,\n  VIEWBOX_CENTER_X,\n  VIEWBOX_CENTER_Y,\n} from './constants';\nimport Path from './Path';\nimport { CircularProgressbarDefaultProps, CircularProgressbarProps } from './types';\n\nclass CircularProgressbar extends React.Component<CircularProgressbarProps> {\n  static defaultProps: CircularProgressbarDefaultProps = {\n    background: false,\n    backgroundPadding: 0,\n    circleRatio: 1,\n    classes: {\n      root: 'CircularProgressbar',\n      trail: 'CircularProgressbar-trail',\n      path: 'CircularProgressbar-path',\n      text: 'CircularProgressbar-text',\n      background: 'CircularProgressbar-background',\n    },\n    counterClockwise: false,\n    className: '',\n    maxValue: 100,\n    minValue: 0,\n    strokeWidth: 8,\n    styles: {\n      root: {},\n      trail: {},\n      path: {},\n      text: {},\n      background: {},\n    },\n    text: '',\n  };\n\n  getBackgroundPadding() {\n    if (!this.props.background) {\n      // Don't add padding if not displaying background\n      return 0;\n    }\n    return this.props.backgroundPadding;\n  }\n\n  getPathRadius() {\n    // The radius of the path is defined to be in the middle, so in order for the path to\n    // fit perfectly inside the 100x100 viewBox, need to subtract half the strokeWidth\n    return VIEWBOX_HEIGHT_HALF - this.props.strokeWidth / 2 - this.getBackgroundPadding();\n  }\n\n  // Ratio of path length to trail length, as a value between 0 and 1\n  getPathRatio() {\n    const { value, minValue, maxValue } = this.props;\n    const boundedValue = Math.min(Math.max(value, minValue), maxValue);\n    return (boundedValue - minValue) / (maxValue - minValue);\n  }\n\n  render() {\n    const {\n      circleRatio,\n      className,\n      classes,\n      counterClockwise,\n      styles,\n      strokeWidth,\n      text,\n    } = this.props;\n\n    const pathRadius = this.getPathRadius();\n    const pathRatio = this.getPathRatio();\n\n    return (\n      <svg\n        className={`${classes.root} ${className}`}\n        style={styles.root}\n        viewBox={`0 0 ${VIEWBOX_WIDTH} ${VIEWBOX_HEIGHT}`}\n        data-test-id=\"CircularProgressbar\"\n      >\n        {this.props.background ? (\n          <circle\n            className={classes.background}\n            style={styles.background}\n            cx={VIEWBOX_CENTER_X}\n            cy={VIEWBOX_CENTER_Y}\n            r={VIEWBOX_HEIGHT_HALF}\n          />\n        ) : null}\n\n        <Path\n          className={classes.trail}\n          counterClockwise={counterClockwise}\n          dashRatio={circleRatio}\n          pathRadius={pathRadius}\n          strokeWidth={strokeWidth}\n          style={styles.trail}\n        />\n\n        <Path\n          className={classes.path}\n          counterClockwise={counterClockwise}\n          dashRatio={pathRatio * circleRatio}\n          pathRadius={pathRadius}\n          strokeWidth={strokeWidth}\n          style={styles.path}\n        />\n\n        {text ? (\n          <text\n            className={classes.text}\n            style={styles.text}\n            x={VIEWBOX_CENTER_X}\n            y={VIEWBOX_CENTER_Y}\n          >\n            {text}\n          </text>\n        ) : null}\n      </svg>\n    );\n  }\n}\n\nexport default CircularProgressbar;\n","export const VIEWBOX_WIDTH = 100;\nexport const VIEWBOX_HEIGHT = 100;\nexport const VIEWBOX_HEIGHT_HALF = 50;\nexport const VIEWBOX_CENTER_X = 50;\nexport const VIEWBOX_CENTER_Y = 50;\n","import React, { useEffect, useState } from 'react'\r\nimport { CircularProgressbar } from 'react-circular-progressbar'\r\nimport 'react-circular-progressbar/dist/styles.css'\r\n\r\nconst AnimatedProgresBar = ({ label, end, duration }) => {\r\n  const [count, setCount] = useState(0)\r\n\r\n  useEffect(() => {\r\n    let start = 0\r\n    if (start === end) return\r\n    let timer = setInterval(() => {\r\n      start += 1\r\n      setCount(start)\r\n      if (start === end) clearInterval(timer)\r\n    }, (duration / end) * 1000)\r\n\r\n    return () => {\r\n      clearInterval(timer)\r\n    }\r\n    // dependency array\r\n  }, [end, duration])\r\n\r\n  return (\r\n    <div className='flex flex-col w-fit justify-center items-center gap-2'>\r\n      <CircularProgressbar value={count} text={count} className='h-20' />\r\n      <h1 className='title'>{label}</h1>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AnimatedProgresBar\r\n","const skillItems = [\r\n  {\r\n    label: 'React',\r\n    end: 70,\r\n    duration: 1,\r\n  },\r\n  {\r\n    label: 'Golang',\r\n    end: 60,\r\n    duration: 1,\r\n  },\r\n  {\r\n    label: 'Java',\r\n    end: 60,\r\n    duration: 1,\r\n  },\r\n  {\r\n    label: 'NodeJS',\r\n    end: 65,\r\n    duration: 1,\r\n  },\r\n  {\r\n    label: 'Javascript',\r\n    end: 65,\r\n    duration: 1,\r\n  },\r\n  {\r\n    label: 'Typescript',\r\n    end: 60,\r\n    duration: 1,\r\n  },\r\n  {\r\n    label: 'Python',\r\n    end: 50,\r\n    duration: 1,\r\n  },\r\n  {\r\n    label: 'PHP',\r\n    end: 55,\r\n    duration: 1,\r\n  },\r\n  {\r\n    label: 'Dart',\r\n    end: 55,\r\n    duration: 1,\r\n  },\r\n  {\r\n    label: 'Solidity',\r\n    end: 50,\r\n    duration: 1,\r\n  },\r\n  {\r\n    label: 'Redux',\r\n    end: 60,\r\n    duration: 1,\r\n  },\r\n  {\r\n    label: 'Gorm',\r\n    end: 65,\r\n    duration: 1,\r\n  },\r\n  {\r\n    label: 'Flutter',\r\n    end: 55,\r\n    duration: 1,\r\n  },\r\n  {\r\n    label: 'RDBMS',\r\n    end: 60,\r\n    duration: 1,\r\n  },\r\n  {\r\n    label: 'NoSQL',\r\n    end: 55,\r\n    duration: 1,\r\n  },\r\n  {\r\n    label: 'HTML',\r\n    end: 85,\r\n    duration: 1,\r\n  },\r\n  {\r\n    label: 'CSS',\r\n    end: 85,\r\n    duration: 1,\r\n  },\r\n  {\r\n    label: 'Tailwind',\r\n    end: 65,\r\n    duration: 1,\r\n  },\r\n  {\r\n    label: 'Bootstrap',\r\n    end: 65,\r\n    duration: 1,\r\n  },\r\n  {\r\n    label: 'Git',\r\n    end: 65,\r\n    duration: 1,\r\n  },\r\n  {\r\n    label: 'Cloud Service',\r\n    end: 20,\r\n    duration: 1,\r\n  },\r\n]\r\n\r\nexport default skillItems\r\n","import React from 'react'\r\nimport AnimatedProgresBar from '../../components/AnimatedProgressBar'\r\nimport skillItems from '../../data/skills'\r\n\r\nfunction Skills() {\r\n  return (\r\n    <div className='wrapper'>\r\n      <div className='border-b px-4 py-6'>\r\n        <h1 className='title text-2xl p-6'>Skills</h1>\r\n        <p className='font-light tracking-wider px-6'>\r\n          I don&apos;t think this part is accurate because the skill rate depends on who I am\r\n          comparing with\r\n        </p>\r\n      </div>\r\n      <div className='m-4'>\r\n        <article>\r\n          <div className='grid grid-cols-2 md:grid-cols-3 lg:grid-cols-4 place-items-center gap-10'>\r\n            {skillItems.map((item, i) => {\r\n              return (\r\n                <AnimatedProgresBar\r\n                  key={`progress-${i}`}\r\n                  label={item.label}\r\n                  end={item.end}\r\n                  duration={item.duration}\r\n                />\r\n              )\r\n            })}\r\n          </div>\r\n        </article>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Skills\r\n"],"names":["Path","_a","className","counterClockwise","dashRatio","pathRadius","strokeWidth","style","React.createElement","Object","assign","getDashStyle","d","getPathDescription","fillOpacity","rotation","diameter","Math","PI","gapLength","strokeDasharray","strokeDashoffset","__extends","CircularProgressbar","this","props","background","backgroundPadding","getBackgroundPadding","value","minValue","maxValue","min","max","circleRatio","classes","styles","text","getPathRadius","pathRatio","getPathRatio","root","viewBox","cx","cy","r","trail","path","x","y","React.Component","label","end","duration","useState","count","setCount","useEffect","start","timer","setInterval","clearInterval","skillItems","item","i"],"sourceRoot":""}